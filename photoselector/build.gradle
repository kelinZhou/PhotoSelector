apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdk 34

    buildFeatures{
        viewBinding true
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    namespace 'com.kelin.photoselector'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    //noinspection GradleDependency
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'

    //coil图片加载
    api "io.coil-kt:coil-compose:$coil_version"
    api "io.coil-kt:coil-gif:$coil_version"
    api "io.coil-kt:coil-video:$coil_version"

    //大图预览组件
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'
    //6.0以上的动态权限处理
    implementation 'com.github.kelinZhou:OkPermission:3.4.3'
    //ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    //ExoPlayer视频播放器
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer_version"
}

// 指定编码
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

//// 打包源码
//tasks.register('sourcesJar', Jar) {
//    dependsOn build
//    from android.sourceSets.main.java.srcDirs
//    archiveClassifier.convention('sources')
//    archiveClassifier.set('sources')
//}
//
//tasks.register('javadoc', Javadoc) {
//    dependsOn build
//    failOnError false
//    source = android.sourceSets.main.java.sourceFiles
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
////    classpath += configurations.compile
//}
//
//// 制作文档(Javadoc)
//tasks.register('javadocJar', Jar) {
//    dependsOn javadoc
//    archiveClassifier.convention('sources')
//    archiveClassifier.set('sources')
//    from javadoc.getDestinationDir()
//}
//
//afterEvaluate{
//    artifacts {
//        archives sourcesJar
//        archives javadocJar
//    }
//}
//
//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}
